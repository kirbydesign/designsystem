@use '../../scss/utils';

:host {
  position: var(--kirby-badge-position, relative);
  left: var(--kirby-badge-left, auto);
  right: var(--kirby-badge-right, auto);
  top: var(--kirby-badge-top, auto);
  z-index: var(--kirby-badge-z-index, auto);
  font-size: utils.font-size('xxs');
  line-height: 1;

  ion-badge {
    --background: #{utils.get-color('white')};
    --color: #{utils.get-color('white-contrast')};
    --ion-color-base: var(--kirby-badge-background-color);
    --ion-color-contrast: var(--kirby-badge-color);

    box-sizing: border-box; // Fixes https://github.com/kirbydesign/designsystem/issues/537
    border-radius: utils.size('xxs');
    font-size: inherit;
    position: relative;
    box-shadow: var(--kirby-badge-elevation, none);
  }

  ::slotted(kirby-icon) {
    --kirby-icon-font-size: #{utils.font-size('n')};

    position: absolute;
    top: 0;
    left: 0;
  }
}

:host(.sm) {
  ion-badge {
    padding: initial;
    min-height: initial;
    min-width: initial;
    height: utils.size('xxs');
    width: utils.size('xxs');
  }
}

:host(.md) {
  ion-badge {
    --padding-top: 3px;
    --padding-end: 5px;
    --padding-bottom: 3px;
    --padding-start: 5px;

    min-width: utils.size('s');
    min-height: utils.size('s');
  }
}

@each $color-name, $color-value in utils.$notification-colors {
  $text-color: utils.get-color($color-name + '-contrast');
  @if $color-name == 'danger' {
    $text-color: utils.get-text-color('white');
  }
  :host(.#{$color-name}) {
    ion-badge {
      --background: #{utils.get-color($color-name)};
      --color: #{var(--kirby-badge-color, #{$text-color})};
    }
  }
}
