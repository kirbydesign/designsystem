@use 'sass:math';
@use 'sass:meta';
@use '../utils';

// Put state layer above content layer as default.
// You can change move the content layer on top by declaring e.g.:
//
//    --content-layer-z-index: calc(#{layer.$state-layer-z-index} + 1);
//
// in a component that uses interaction state layer.
$_content-layer-z-index: utils.z('default');
$state-layer-z-index: $_content-layer-z-index + 1;

$_dark: utils.get-color('black');
$_light: utils.get-color('black-contrast');

$default-loudness: 'm';

@mixin setup-layer {
  --state-layer-opacity: 0;
  --state-layer-background-color: $_dark;

  position: relative;

  .content-layer {
    position: relative;
    z-index: var(--content-layer-z-index, $_content-layer-z-index);
  }

  .state-layer {
    position: absolute;
    inset: calc(var(--border-width, 0px) * -1); // negate border-width on parent
    overflow: hidden;
    pointer-events: none;
    border-radius: inherit;

    z-index: $state-layer-z-index;

    &::before {
      @include transition;

      content: '';
      position: absolute;
      pointer-events: none;
      inset: -50%;

      opacity: var(--state-layer-opacity, 0);
      background-color: var(--state-layer-background-color, $_dark);
    }
  }
}

@mixin apply-state($loudness: $default-loudness, $flip: false) {
  $loudness-percent: utils.get-loudness($loudness);

  @if not(meta.type-of($loudness-percent) == number and math.unit($loudness-percent) == '%') {
    @error "$loudness-percent must be a percentage";
  }

  --state-layer-opacity: #{$loudness-percent / 100%};

  @if $flip {
    --state-layer-background-color: #{$_light};
  } @else {
    --state-layer-background-color: #{$_dark};
  }
}

@mixin extend-content {
  .content-layer {
    @content;
  }
}

/// Apply streamlined transition to interaction state changes
/// @param {*} $property [all]
@mixin transition($property: all) {
  $duration: utils.get-transition-duration('quick');
  $timing-function: utils.get-transition-easing('static');
  $delay: 0ms;

  transition: $property $duration $timing-function $delay;
}
