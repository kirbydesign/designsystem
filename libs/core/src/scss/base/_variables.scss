@use 'sass:map';
@use 'sass:math';

/*
  SPACINGS
****************************************************************************/
$sizes: (
  xxxxxl: 72px,
  xxxxl: 64px,
  xxxl: 56px,
  xxl: 48px,
  xl: 40px,
  l: 32px,
  m: 24px,
  s: 16px,
  xs: 12px,
  xxs: 8px,
  xxxs: 4px,
  xxxxs: 2px,
) !default;

// $base-size-unitless: 16;
// $sizes: (
//   xxxxxl: calc(1rem * 72 / $base-size-unitless),
//   xxxxl: calc(1rem * 64 / $base-size-unitless),
//   xxxl: calc(1rem * 56 / $base-size-unitless),
//   xxl: calc(1rem * 48 / $base-size-unitless),
//   xl: calc(1rem * 40 / $base-size-unitless),
//   l: calc(1rem * 32 / $base-size-unitless),
//   m: calc(1rem * 24 / $base-size-unitless),
//   s: calc(1rem * 16 / $base-size-unitless),
//   xs: calc(1rem * 12 / $base-size-unitless),
//   xxs: calc(1rem * 8 / $base-size-unitless),
//   xxxs: calc(1rem * 4 / $base-size-unitless),
//   xxxxs: calc(1rem * 2 / $base-size-unitless),
// ) !default;

/*
  FONT SETTINGS 
****************************************************************************/
$base-font-size-unitless: 16;
$font-sizes: (
  xxxxl: calc((1rem * 72) / $base-font-size-unitless),
  xxxl: calc((1rem * 56) / $base-font-size-unitless),
  xxl: calc((1rem * 40) / $base-font-size-unitless),
  xl: calc((1rem * 32) / $base-font-size-unitless),
  l: calc((1rem * 22) / $base-font-size-unitless),
  m: calc((1rem * 18) / $base-font-size-unitless),
  n: calc((1rem * 16) / $base-font-size-unitless),
  s: calc(1rem * 14 / $base-font-size-unitless),
  xs: calc(1rem * 12 / $base-font-size-unitless),
  xxs: calc(1rem * 10 / $base-font-size-unitless),
) !default;
$line-height: (
  // h1:
  xl: 2.375,
  // h2:
  l: 1.75,
  // h3:
  m: 1.5,
  // p - please note: p and h3 share the same line-height, added the sizes to "match" with font-size:
  n: 1.5,
  // text-small:
  s: 1.25,
  // text-xsmall:
  xs: 1,
  // text-xxsmall:
  xxs: 0.9167
) !default;
$font-weight: (
  light: 300,
  normal: 400,
  medium: 500,
  bold: 700,
  // black will be treated as a named css color if not quoted
  'black': 900,
) !default;

/* Icon
****************************************************************************/
$icon-font-sizes: (
  'xs': map.get($sizes, 's'),
  'sm': map.get($sizes, 'm'),
  'md': map.get($sizes, 'l'),
  'lg': map.get($sizes, 'xxxl'),
) !default;

/*
  Z - Index overview
****************************************************************************/
$z-layers: (
  default: 1,
  segment-badge: 2,
  avatar-badge: 2,
  sticky-content: 10,
  dropdown: 800,
  popover: 850,
  modal-overlay: 900,
  modal: 901,
  loading-overlay: 1001,
) !default;
$border-radius: 16px !default;
$border-radius-round: 999px !default;

/* Breakpoints
****************************************************************************/
$breakpoints: (
  xsmall: 320px,
  small: 632px,
  medium: 768px,
  large: 992px,
  xlarge: 1440px,
) !default;

/* Elevation
****************************************************************************/
$elevations: (
  2: (
    0 1px 24px 0 rgb(28 28 28 / 4%),
  ),
  4: (
    0 0 5px 0 rgba(28 28 28 / 4%),
    0 10px 15px -10px rgba(28 28 28 / 15%),
  ),
  8: (
    0 20px 30px -15px rgb(28 28 28 / 30%),
    0 0 5px 0 rgb(28 28 28 / 8%),
  ),
) !default;

/* avatar
****************************************************************************/
$avatar-sizes: (
  xs: 32px,
  s: 40px,
  m: 56px,
  l: 96px,
) !default;
$avatar-badge-size: 16px;

/* Page
****************************************************************************/
$page-content-max-widths: (
  default: 792px,
  lg: 1092px,
  xl: 1392px,
  full: 100%,
);
$page-content-max-width-default: map.get($page-content-max-widths, 'default');
$page-content-max-width: $page-content-max-width-default;

/* Modal
****************************************************************************/
$alert-max-width: 359px;
$compact-modal-max-width: 359px;
$modal-max-width: 720px;
$modal-heights: (
  s: math.floor($modal-max-width * 0.4),
  m: math.floor($modal-max-width * 0.64),
  l: math.floor($modal-max-width * 0.8),
) !default;
$modal-default-height: map.get($modal-heights, 'm');
$drawer-default-height: map.get($modal-heights, 's');

/* Modal V2
****************************************************************************/
$modal-v2-widths: (
  l: 960px,
  m: 800px,
  s: 720px,
  xs: 600px,
  xxs: 343px,
) !default;
$modal-v2-heights: (
  l: math.floor(map.get($modal-v2-widths, 'l') * 0.75),
  m: math.floor(map.get($modal-v2-widths, 'm') * 0.75),
  s: math.floor(map.get($modal-v2-widths, 's') * 0.75),
  xs: math.floor(map.get($modal-v2-widths, 'xs') * 0.75),
  xxs: math.floor(map.get($modal-v2-widths, 'xxs') * 0.75),
) !default;

/* Item
****************************************************************************/
$item-heights: (
  m: 56px,
  s: 44px,
  xs: 32px,
) !default;

/* Dropdown
****************************************************************************/
$dropdown-item-height: map.get($item-heights, 's');

/* Button, Checkbox, Page, Radio
****************************************************************************/
$fat-finger-size: 44px;

/* Checkbox, Radio
****************************************************************************/
$checkbox-radio-sizes: (
  'xs': map.get($sizes, 'l'),
  'sm': $fat-finger-size,
  'md': map.get($sizes, 'xxxl'),
);
$checkbox-radio-spacing: (
  'to-edge': map.get($sizes, 's'),
  'to-label': map.get($sizes, 'xs'),
);

/* Checkbox - size
****************************************************************************/
$checkbox-sizes: (
  'xs': (
    icon-size: map.get($sizes, 's'),
    line-height: map.get($sizes, 'm'),
    vertical-padding: 4px,
  ),
  'sm': (
    icon-size: map.get($sizes, 'm'),
    line-height: map.get($checkbox-radio-sizes, 'sm'),
    vertical-padding: 10px,
  ),
  'md': (
    icon-size: map.get($sizes, 'm'),
    line-height: map.get($checkbox-radio-sizes, 'md'),
    vertical-padding: 16px,
  ),
);

/* Transitions
****************************************************************************/
$soft-keyboard-transition-enter: 250ms ease-out 1ms; // Adding a 1ms delay seems to improve the smoothness on iPhone
$soft-keyboard-transition-leave: 150ms ease-out;
$transition-durations: (
  quick: 200ms,
  short: 300ms,
  long: 500ms,
  extra-long: 1000ms,
);

// Easing function
$transition-easings: (
  static: linear,
  enter: ease-out,
  exit: ease-in,
  enter-exit: ease,
  motion: cubic-bezier(0.25, 0.1, 0.25, 1),
  modal: (
    enter: cubic-bezier(0.32, 0.72, 0, 1),
    exit: cubic-bezier(0.32, 0.72, 0, 1),
  ),
);
$loading-overlay-backdrop-opacity: 0.8;
