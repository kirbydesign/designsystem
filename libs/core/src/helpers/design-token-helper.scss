@use 'sass:list';
@use 'sass:map';
@use 'sass:meta';
@use 'sass-to-ts';
@use '../scss/base/variables';

@function remap-elevation($elevations) {
  $elevation-list: ();
  @each $elevation-key, $shadow-list in $elevations {
    $shadow-list-reordered: ();
    @each $shadow in $shadow-list {
      $shadow-color: list.nth($shadow, -1);

      // window.getComputedStyle() returns box-shadow with color first, so re-order shadow components:
      $shadow-reordered: ($shadow-color);
      @for $i from 1 through list.length($shadow)-1 {
        // Add and subtract 1px to ensure px-values in output:
        $shadow-length-in-px: 1px + list.nth($shadow, $i) - 1px;
        $shadow-reordered: list.append($shadow-reordered, $shadow-length-in-px);
      }

      $shadow-list-reordered: list.append(
        $shadow-list-reordered,
        $shadow-reordered,
        $separator: comma
      );
    }

    $elevation-list: map.merge(
      $elevation-list,
      (
        $elevation-key: $shadow-list-reordered,
      )
    );
  }
  @return $elevation-list;
}

$styles: map.merge(
  meta.module-variables('variables'),
  (
    // window.getComputedStyle() returns box-shadow in a specific format, so re-map elevations:
    'elevations': remap-elevation(variables.$elevations)
  )
);

@include sass-to-ts.output-styles($styles);
