@use 'sass:color';
@use 'sass:map';
@use '@kirbydesign/core/src/scss/interaction-state';
@use '@kirbydesign/core/src/scss/utils';

$ion-content-padding-top: utils.size('xs');

/*
 * Page Header
 */

$toolbar-transition-duration-in: utils.get-transition-duration('quick');
$toolbar-transition-duration-out: 50ms;
$toolbar-transition: background-color $toolbar-transition-duration-out linear;
$toolbar-shaded-background: color.mix(
  #000,
  utils.get-color('background-color', $getValueOnly: true),
  1.1%
);
$toolbar-button-size: utils.size('xl');
$toolbar-button-spacing: utils.size('xxs');

ion-header,
ion-toolbar {
  --background: #{utils.get-color('background-color')};

  margin: 0 auto;
}

ion-toolbar {
  --border-width: 0 !important;
  --padding-start: #{utils.size('s')};
  --padding-end: #{utils.size('s')};
  --padding-top: 0;
  --padding-bottom: 0;
  --ion-toolbar-color: #{utils.get-color('black')};
  --min-height: #{utils.size('xxxl')};

  @include utils.media('>=medium') {
    --padding-start: #{utils.size('m')};
    --padding-end: #{utils.size('m')};
    --min-height: #{utils.size('xxxxxl')};
  }

  /*
  * Toolbar Divider & Shaded background
  */

  // Divider:
  &::before {
    content: '';
    position: absolute;
    left: 0;
    right: 0;
    bottom: 0;
    height: 1px;
  }

  &::before,
  &::part(background) {
    transition: $toolbar-transition;
  }

  // Only show toolbar divider + shaded bg when content is scrolled:
  &.content-scrolled {
    --background: #{$toolbar-shaded-background};

    &::before,
    &::part(background) {
      transition-duration: $toolbar-transition-duration-in;
    }

    &:not(.content-pinned)::before {
      background-color: utils.get-color('medium');
    }
  }

  &.content-pinned {
    &::before {
      transition: none;
    }
  }

  ion-buttons {
    // Back button:
    &[slot='start'] {
      margin-right: $toolbar-button-spacing;
    }

    // Action buttons:
    &[slot='primary'],
    &[slot='secondary'] {
      margin-left: $toolbar-button-spacing;
    }

    /*
    * This overrides Ionic's default ios styling for the position of secondary action buttons which are to the left of content: https://ionicframework.com/docs/api/toolbar#buttons
    * We would like the seconday actions to be to the far right after primary actions (usually as a falafel):
    */
    &[slot='secondary'] {
      order: 6;
    }
  }

  ion-title {
    visibility: hidden;
    opacity: 0;
    transform: translateY(10px);
    transition-property: opacity, transform;
    transition-duration: 150ms;
    transition-timing-function: utils.get-transition-easing('enter-exit');
    padding-inline: calc(
      var(--action-buttons-width, $toolbar-button-size + $toolbar-button-spacing) +
        var(--padding-start)
    );

    &.slide-and-fade-in {
      visibility: visible;
      opacity: 1;
      transform: translateY(0);
    }

    .toolbar-title,
    .toolbar-title > span.has-icon > span {
      text-overflow: ellipsis;
      white-space: nowrap;
      pointer-events: auto;
      overflow: hidden;
    }

    .toolbar-title {
      font-weight: utils.font-weight('bold');

      span.clickable {
        cursor: pointer;
      }

      span.has-icon {
        display: inline-flex;
        flex-direction: row;
        align-items: center;
        justify-content: center;
        max-width: 100%;
      }

      @include utils.slotted('*') {
        text-overflow: ellipsis;
        white-space: nowrap;
        pointer-events: auto;
        overflow: hidden;
      }
    }
  }
}

.hide {
  visibility: hidden;
  opacity: 0;
  transition: opacity 100ms linear;

  &.fade-in {
    visibility: inherit;
    opacity: 1;
  }
}

ion-title {
  box-sizing: border-box;
  font-size: utils.font-size('n');
  font-weight: utils.font-weight('normal');
}

ion-back-button {
  @include interaction-state.apply-hover-ionic;
  @include interaction-state.apply-active-ionic('s');

  --color: #{utils.get-color('black')};
  --background: #{utils.get-color('white')};
  --icon-font-size: 24px;

  height: $toolbar-button-size;
  width: $toolbar-button-size;

  // Properly center back-icon
  &::part(icon) {
    margin-inline: 0;
  }

  // NOTE: This is a custom implementation of the hover interaction state;
  // identical to FabSheet's ion-fab-button & SegmentedControlComponent's
  // ion-segment-button.
  opacity: 1; // required for interaction states to work

  &::part(native) {
    opacity: 1; // required for interaction states to work
    border-radius: utils.$border-radius-round;
    overflow: hidden; // required for border radius to work
  }

  &::part(native)::after {
    transition: interaction-state.transition();
  }

  // end NOTE
}

/*
 * Page Header
 */
.page-header-container {
  max-width: var(--page-content-max-width, utils.$page-content-max-width-default);
  margin: 0 auto;
}

.page-header {
  margin-left: utils.size('s');
  margin-top: utils.size('xxs');
  margin-bottom: var(--kirby-page-title-margin-bottom, #{utils.size('xl')});

  .page-title {
    &.has-actions {
      display: flex;
      justify-content: space-between;
      align-items: flex-start;
    }

    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
      margin: 0;
    }
  }

  .page-subtitle {
    margin-top: #{utils.size('xxs')};
  }

  &.text-center {
    text-align: center;
    margin-left: 0;
  }

  &.text-right {
    text-align: right;
  }
}

/*
 * Page Content
 */
ion-content {
  --padding-top: #{$ion-content-padding-top};
  --padding-start: var(--page-content-padding-start, #{utils.size('s')});
  --padding-end: var(--page-content-padding-end, #{utils.size('s')});
  --background: #{utils.get-color('background-color')};
  --color: #{utils.get-color('black')};

  @include utils.media('>=medium') {
    --padding-start: var(--page-content-padding-start, #{utils.size('xxl')});
    --padding-end: var(--page-content-padding-end, #{utils.size('xxl')});
  }

  &.has-header {
    --padding-top: 0;
  }

  &.max-width-optimized {
    --page-content-max-width: #{utils.get-page-content-max-width('optimized')};
  }

  &.max-width-full {
    --page-content-max-width: #{utils.get-page-content-max-width('full')};
  }

  &::part(scroll) {
    scrollbar-gutter: stable;
  }

  .content-inner {
    max-width: var(--page-content-max-width, utils.$page-content-max-width-default);
    margin: 0 auto;
    padding-bottom: utils.size('xl');
  }

  /*
  * Fixed content
  */
  .fixed-content {
    width: 100%;
    position: absolute;
    bottom: 0;
    transform: initial;

    .content-inner {
      position: relative;
    }
  }
}

/*
 * Sticky content
 */
.sticky-content-container {
  position: sticky;

  // Adjust for padding-top of ion-content to position static content properly
  // and subtract 1px to let it not fully intersect with viewport when pinned.
  top: calc(-1 * $ion-content-padding-top - 1px);
  left: 0;
  right: 0;
  padding-top: 1px;
  margin-block-end: utils.size('m');
  z-index: utils.z('sticky-content');

  div {
    max-width: var(--page-content-max-width, utils.$page-content-max-width-default);
    margin: 0 auto;
  }

  &::before,
  &::after {
    /* Background + Divider */
    content: '';
    position: absolute;

    // Adjust for padding of ion-content to stretch divider to full width:
    left: calc(-1 * var(--padding-start));
    right: calc(-1 * var(--padding-end));
    bottom: 0;
  }

  &::before {
    /* Background */
    top: 0;

    // Same bg color as ion-content to prevent see-through
    // when scrolling the page behind the sticky content:
    background-color: var(--background);
  }

  &::after {
    /* Divider */
    height: 1px;
  }

  &.content-pinned {
    &::before {
      /* Background - pinned */
      background-color: $toolbar-shaded-background;
    }

    &::after {
      /* Divider - pinned */
      background-color: utils.get-color('medium');
    }
  }
}
