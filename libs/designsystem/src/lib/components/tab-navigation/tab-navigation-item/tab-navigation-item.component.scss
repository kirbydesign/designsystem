@use '@kirbydesign/core/src/scss/utils';

$tab-item-text-max-width: 100px;
$bottom-border-height: 1px;
$border-color-standard: utils.get-color('medium');
$border-color-selected: utils.get-color('dark');
$divider-max-width-breakpoint: utils.$page-content-max-width + (utils.size('s') * 2);

:host {
  position: relative;
  cursor: pointer;
  box-sizing: border-box;
  outline: none;
  padding-bottom: $bottom-border-height * 2;

  // Selected divider
  &.selected::before {
    content: '';
    width: 100%;
    background-color: $border-color-selected;
    position: absolute;
    border-radius: 1px;
    height: $bottom-border-height * 2;
    bottom: 0;
    z-index: 2;
  }

  &.selected,
  &:focus,
  &:hover {
    font-weight: utils.font-weight('bold');
  }
}

.tab-item-inner {
  display: flex;
  gap: utils.size('xxxs');
  align-items: center;
  justify-content: center;
  white-space: nowrap;
  margin: utils.size('s');

  // Disable text selection on tab items
  user-select: none;
}

// Restrict cascade of styles to all child elements of component - see https://blog.angular-university.io/angular-host-context/
/* stylelint-disable-next-line selector-pseudo-element-no-unknown */
:host ::ng-deep span[text] {
  max-width: $tab-item-text-max-width;
  overflow: hidden;
  text-overflow: ellipsis;

  // The larger line-height ensures no vertical layout shifts when changing the span's text content from bold to normal font-weight.
  line-height: utils.size('m');

  // Using the before selector to insert a hidden pseudo-element with the same text content in bold,
  // ensures no horizontal layout shifts when changing the visible span's text content from bold to normal font-weight.
  &::before {
    display: block;
    content: attr(data-text);
    font-weight: bold;
    height: 0;
    overflow: hidden;
    visibility: hidden;
  }
}
