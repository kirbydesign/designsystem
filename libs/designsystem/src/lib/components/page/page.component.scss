@import '../../scss/utils';

/*
 * Page Header
 */
ion-header,
ion-toolbar {
  --background: #{get-color('background-color')};
  margin: 0 auto;

  @include media('>=large') {
    @include not-touch {
      max-width: 768px;
    }
  }
}

ion-toolbar {
  --border-width: 0 !important;
  --padding-start: #{size('xxxs')};
  --padding-end: #{size('xxxs')};
  --padding-top: 0;
  --padding-bottom: 0;

  /*
  * This overrides Ionic's default ios styling for the position of secondary action buttons which are to the left of content: https://ionicframework.com/docs/api/toolbar#buttons
  * We would like the seconday actions to be to the far right after primary actions (usually as a falafel):
  */
  ion-buttons[slot='secondary'] {
    order: 6;
  }

  ion-title {
    .toolbar-title {
      text-overflow: ellipsis;
      white-space: nowrap;
      pointer-events: auto;
      overflow: hidden;

      @include slotted('*') {
        text-overflow: ellipsis;
        white-space: nowrap;
        pointer-events: auto;
        overflow: hidden;
      }
    }
  }
}

.hide {
  visibility: hidden;
  opacity: 0;
  transition: opacity 100ms linear;

  &.fade-in {
    visibility: inherit;
    opacity: 1;
  }
}

ion-title {
  box-sizing: border-box;
  font-size: font-size('n');
  font-weight: font-weight('normal');
}

ion-back-button {
  --color: #{get-color('black')};
  --icon-font-size: 24px;
  height: $fat-finger-size;
  width: $fat-finger-size;
}

/*
 * Page Title
 */
.page-title {
  margin-left: size('s');
  margin-top: size('xxs');
  margin-bottom: var(--kirby-page-title-margin-bottom, #{size('xl')});

  &.has-actions {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
  }

  &.text-center {
    text-align: center;
    margin-left: 0;
  }

  &.text-right {
    text-align: right;
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    margin: 0;
  }
}

/*
 * Page Content
 */
ion-content {
  --padding-start: var(--page-content-padding-start, #{size('s')});
  --padding-end: var(--page-content-padding-end, #{size('s')});
  --background: #{get-color('background-color')};

  .content-inner {
    max-width: var(--page-content-max-width, $page-content-max-width);
    margin: 0 auto;
    padding-bottom: size('xl');
  }

  /*
  * Fixed content
  */
  .fixed-content {
    width: 100%;
    position: absolute;
    bottom: 0;
    .content-inner {
      position: relative;
    }
  }
}

/*
  TODO: line-clamp styles should be moved to somewhere else
 */
.line-clamp {
  line-height: var(--line-height);
  overflow: hidden;

  /* Fallback when -webkit-line-clamp is not supported */
  max-height: calc(var(--line-clamp) * var(--line-height));

  position: relative;

  // Ellipsis
  &::before {
    content: 'â€¦';
    position: absolute;
    right: 0;
    bottom: 0;
    background-color: var(--kirby-background-color);
    line-height: var(--line-height);
    height: var(--line-height);
  }

  // Cover ellipsis when number of lines is less than or equal to line-clamp value
  &::after {
    content: '';
    position: absolute;
    right: 0;
    width: 1em;
    height: var(--line-height);
    line-height: var(--line-height);
    background-color: var(--kirby-background-color);
  }
}

@supports (-webkit-line-clamp: 1) {
  .line-clamp {
    /* reset max-height */
    max-height: initial;

    // Non-standard line-clamp with wide browser support
    // See https://caniuse.com/mdn-css_properties_-webkit-line-clamp
    display: -webkit-box;
    -webkit-line-clamp: var(
      --line-clamp,
      initial
    ); /* Fallback value could also be a specific number */
    -webkit-box-orient: vertical;

    // Hide the fallback ellipsis
    &::before,
    &::after {
      display: none;
    }
  }
}
