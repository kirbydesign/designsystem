@import '../../scss/utils';
@import 'item.utils';

:host {
  display: block;
  position: relative;

  ion-item {
    font-size: font-size('s');
    --min-height: #{map-get($item-heights, 'm')};
    --padding-start: #{size('s')};
    --inner-padding-top: #{size('xxs')};
    --inner-padding-bottom: #{size('xxs')};
    --inner-padding-end: #{size('s')};

    --background: var(--kirby-item-background, #{get-color('white')});
    --background-activated: var(--kirby-item-background-activated, #{get-color('white-shade')});
    // WORKAROUND: Needed to fix ignored click on scrollend
    // https://github.com/ionic-team/ionic-framework/issues/21871
    --background-activated-opacity: 0.99;
    --background-focused: var(--kirby-item-background-focused, #{get-color('background-color')});
    --background-focused-opacity: 1;
    --background-hover: var(--kirby-item-background-hover, #{get-color('background-color')});
    --background-hover-opacity: 1;

    // Prevent additional padding in iOS Safari on devices with "screen notch"
    // by removing horizontal safe area when rotated to landscape orientation.
    // See https://github.com/kirbydesign/designsystem/issues/1689
    @media screen and (orientation: landscape) {
      --ion-safe-area-left: 0px;
      --ion-safe-area-right: 0px;
    }

    @include slotted('[slot="end"]') {
      margin-inline-start: 0;
      margin-inline-end: 0;
      text-align: right;
    }

    @include slotted('time[slot="end"]') {
      margin-inline-start: size('xs');
    }

    @include slotted('data[slot="end"]', '[detail][slot="end"], ion-reorder[slot="end"]') {
      margin-inline-start: size('s');
    }

    @include item-typography();

    @include slotted(':not([slot])') {
      width: 100%;
    }

    @include slotted('input[slot="end"], kirby-form-field[slot="end"] input') {
      margin-inline-start: size('s');
      width: auto;
      text-align: right;
    }
  }

  &.sm ion-item {
    --min-height: #{map-get($item-heights, 's')};
  }

  &.xs ion-item {
    --min-height: #{map-get($item-heights, 'xs')};
    --inner-padding-top: #{size('xxxs')};
    --inner-padding-bottom: #{size('xxxs')};
  }

  .outside {
    left: size('xxxs');
    margin: 0;
    position: absolute;
    width: size('s');
    z-index: 1;
  }
}

:host-context(kirby-dropdown) ion-item {
  --min-height: #{$dropdown-item-height};
}

/* clean-css ignore:start */
// Fixes https://github.com/kirbydesign/designsystem/issues/1745
ion-item {
  :host-context(kirby-list-item:first-of-type) & {
    --padding-top: #{size('xxs')};
  }

  :host-context(kirby-list-item:first-of-type kirby-card) & {
    --padding-top: 0;
  }

  :host-context(kirby-list-item:last-of-type) & {
    --padding-bottom: #{size('xxs')};
  }

  :host-context(kirby-list-item:last-of-type kirby-card) & {
    --padding-bottom: 0;
  }
}
/* clean-css ignore:end */

:host(.selected),
:host-context(kirby-list .selected) {
  ion-item {
    @include slotted(h1, h2, h3, h4, h5, h6, p, data) {
      font-weight: font-weight('bold');
    }
  }
}

// Fixes https://github.com/kirbydesign/designsystem/issues/1711
:host-context(.shape-rounded .is-single) {
  ion-item {
    --border-radius: #{$border-radius};
  }
}

// Fixes https://github.com/kirbydesign/designsystem/issues/1711
:host-context(.has-header .is-single) {
  ion-item::part(native) {
    border-top-left-radius: 0;
    border-top-right-radius: 0;
  }
}

// Fixes https://github.com/kirbydesign/designsystem/issues/1711
:host-context(.has-footer .is-single) {
  ion-item::part(native) {
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
  }
}

// Fixes https://github.com/kirbydesign/designsystem/issues/1711
:host-context(.shape-rounded.has-sections .list-items kirby-list-item:first-of-type) {
  ion-item::part(native) {
    border-top-left-radius: $border-radius;
    border-top-right-radius: $border-radius;
  }
}
