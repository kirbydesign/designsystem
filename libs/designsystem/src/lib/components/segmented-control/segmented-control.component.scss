@use '@kirbydesign/core/src/scss/interaction-state';
@use '@kirbydesign/core/src/scss/utils';

:host {
  display: block;
  user-select: none;

  --kirby-badge-elevation: #{utils.get-elevation(2)};
  --kirby-badge-position: absolute;
  --kirby-badge-top: -#{utils.size('xxs')};
  --kirby-badge-right: #{utils.size('xxs')};
  --kirby-badge-z-index: #{utils.z('segment-badge')};

  &.sm {
    ion-segment-button {
      min-height: utils.size('l');
      font-size: utils.font-size('xs');

      --padding-start: #{utils.size('s')};
      --padding-end: #{utils.size('s')};

      @include interaction-state.apply-focus-visible {
        outline: none;
        border-radius: utils.$border-radius-round;
      }
    }
  }

  &.default-mode {
    ion-segment {
      --background: var(--kirby-inputs-background-color);

      box-shadow: var(--kirby-inputs-elevation);
      width: fit-content; // The segmented control itself is block-level, but we don't want it to stretch
      overflow: visible; // Ensures the badge is not cut off
      contain: none; // Ensures the badge is not cut off
    }
  }

  &.chip-mode {
    ion-segment {
      @include utils.touch {
        scrollbar-width: none; /* Firefox */
        &::-webkit-scrollbar {
          display: none;
        }
      }

      --background: none;

      border-radius: 0;
      padding: #{utils.size('xxxs')};
      gap: #{utils.size('xxs')};
    }

    ion-segment-button {
      --background: var(--kirby-inputs-background-color);
      --indicator-transition: none;

      flex: initial;

      &::part(indicator) {
        // Remove padding as the selected segment will otherwise have additional space to its neighbors
        padding-inline: 0;
      }
    }
  }

  &.compact {
    ion-segment {
      --background: transparent;
    }

    ion-segment-button {
      --background: transparent;
      --padding-start: #{utils.size('xs')};
      --padding-end: #{utils.size('xs')};
    }
  }
}

ion-segment {
  border-radius: utils.$border-radius-round;
}

ion-segment-button {
  @include interaction-state.apply-focus-part($part: 'native');
  @include utils.accessible-target-size;

  --border-radius: #{utils.$border-radius-round};
  --border-style: none;
  --background: none;
  --color: var(--kirby-inputs-color);
  --indicator-color: var(--kirby-inputs-indicator-background-color);
  --color-checked: var(--kirby-inputs-indicator-color);
  --indicator-box-shadow: none;
  --indicator-transform: none;
  --padding-start: #{utils.size('m')};
  --padding-end: #{utils.size('m')};
  --margin-bottom: 0;
  --margin-end: 0;
  --margin-start: 0;
  --margin-top: 0;

  min-height: utils.size('xl');
  min-width: fit-content;
  font-weight: utils.font-weight('normal');
  font-size: utils.font-size('s');
  text-transform: none;
  margin: 0;

  // NOTE: This is a custom implementation of the hover interaction state;
  // identical to FabSheet's ion-fab-button & PageComponent's ion-back-button.

  &::part(native) {
    border-radius: #{utils.$border-radius-round};
    overflow: hidden; // not strictly required but declared to be consistent
  }

  &::part(native)::after {
    transition: interaction-state.transition();
  }

  // end NOTE

  &::part(indicator) {
    padding-inline: 0;
  }
}

.badge-container {
  position: relative;
}
