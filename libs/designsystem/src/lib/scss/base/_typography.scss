@import '~@fontsource/roboto/300.css';
@import '~@fontsource/roboto/400.css';
@import '~@fontsource/roboto/700.css';
@import '~@fontsource/roboto/900.css';

h1,
.h1,
h2,
.h2,
h3,
.h3,
h4,
.h4,
p,
.p {
  margin: 0;
  margin-bottom: size('s');
}

kirby-app .page-title {
  > h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    margin: 0;
  }
}

.kirby-text-display-1 {
  font-size: font-size('xxxxl');
  font-weight: font-weight('black');
  line-height: normal;
}

.kirby-text-display-2 {
  font-size: font-size('xxxl');
  font-weight: font-weight('black');
  line-height: normal;
}

.kirby-text-display-3 {
  font-size: font-size('xxl');
  font-weight: font-weight('black');
  line-height: normal;
}

h1,
.h1,
.kirby-text-xlarge {
  font-size: font-size('xl');
  font-weight: font-weight('black');
  line-height: line-height('xl');
}

h2,
.h2,
.kirby-text-large {
  font-size: font-size('l');
  font-weight: font-weight('bold');
  line-height: line-height('l');
}

h3,
.h3,
.kirby-text-medium {
  font-size: font-size('m');
  font-weight: font-weight('bold');
  line-height: line-height('m');
}

p,
.p,
.kirby-text-normal {
  font-size: font-size('n');
  line-height: line-height('n');
}

.kirby-text-small {
  font-size: font-size('s');
  line-height: line-height('s');
}

.kirby-text-small-light {
  font-size: font-size('s');
  font-weight: font-weight('light');
  line-height: line-height('s');
}

.kirby-text-xsmall {
  font-size: font-size('xs');
  line-height: line-height('xs');
}

.kirby-text-xxsmall {
  font-size: font-size('xxs');
  line-height: line-height('xxs');
}

.kirby-text-bold {
  font-weight: font-weight('bold');
}

// TODO: line-clamp styles are temporarily put here. Move them where they belong
.line-clamp {
  line-height: var(--line-height);
  overflow: hidden;

  /* Fallback when -webkit-line-clamp is not supported */
  max-height: calc(var(--line-clamp) * var(--line-height));

  position: relative;

  // Ellipsis
  &::before {
    content: 'â€¦';
    position: absolute;
    right: 0;
    bottom: 0;
    background-color: var(--kirby-background-color);
    line-height: var(--line-height);
    height: var(--line-height);
  }

  // Cover ellipsis when number of lines is less than or equal to line-clamp value
  &::after {
    content: '';
    position: absolute;
    right: 0;
    width: 1em;
    height: var(--line-height);
    line-height: var(--line-height);
    background-color: var(--kirby-background-color);
  }
}

@supports (-webkit-line-clamp: 1) {
  .line-clamp {
    /* reset max-height */
    max-height: initial;

    // Non-standard line-clamp with wide browser support
    // See https://caniuse.com/mdn-css_properties_-webkit-line-clamp
    display: -webkit-box;
    -webkit-line-clamp: var(
      --line-clamp,
      initial
    ); /* Fallback value could also be a specific number */
    -webkit-box-orient: vertical;

    // Hide the fallback ellipsis
    &::before,
    &::after {
      display: none;
    }
  }
}
