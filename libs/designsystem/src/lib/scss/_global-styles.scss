@import 'utils';
@import './base/ionic';
@import './base/typography';

:root {
  --kirby-font-family: 'Roboto';
  font-family: var(--kirby-font-family);
  @each $color, $color-name in $kirby-colors {
    --kirby-#{$color}: #{$color-name};
  }
  @each $color, $color-name in $text-colors {
    --kirby-text-color-#{$color}: #{$color-name};
  }
  --kirby-page-max-width: 1366px;
  --kirby-statusbar-padding: var(--ion-statusbar-padding);
  --kirby-safe-area-top: var(--ion-safe-area-top);
  --kirby-safe-area-right: var(--ion-safe-area-right);
  --kirby-safe-area-bottom: var(--ion-safe-area-bottom);
  --kirby-safe-area-left: var(--ion-safe-area-left);
  --kirby-tab-bar-height: 50px;

  // Prevent iOS tap highlight:
  -webkit-tap-highlight-color: transparent;
}

@function get-drawer-additional-padding-top() {
  $modal-close-button-inner-height: size('l'); // Todo: Move to / get from shared var
  $modal-close-button-vertical-margin: size('xxxs') * 2; // Todo: Move to / get from shared var
  $modal-header-vertical-padding: 3px * 2; // 3px defined by Ionic
  $modal-header-total-height: $modal-close-button-inner-height + $modal-close-button-vertical-margin +
    $modal-header-vertical-padding;
  $modal-header-vertical-center: round($modal-header-total-height / 2);
  @return $modal-header-vertical-center;
}

$backdrop-opacity: 0.4;

ion-modal.kirby-overlay {
  position: fixed;

  // Ensure consistent backdrop on all overlays:
  &:not(.modal-card) {
    --backdrop-opacity: #{$backdrop-opacity};
    ion-backdrop {
      opacity: var(--backdrop-opacity);
    }
  }

  // Ensure consistent backdrop on card style modals, as Ionic 5 only applies --backdrop-opacity to :first-of-type:
  // See https://github.com/ionic-team/ionic/commit/253cd96164914a803f6bb42ff95ca74880c940d0
  // and https://github.com/ionic-team/ionic/issues/20800#issuecomment-606670762
  &.modal-card,
  &.modal-card:first-of-type {
    --backdrop-opacity: #{$backdrop-opacity};
  }

  .modal-shadow {
    display: none;
  }

  &.kirby-modal {
    box-sizing: border-box;
    --background: var(--kirby-modal-background, #{get-color('background-color')});
    --border-radius: 0;
    --height: auto;

    &.kirby-modal-compact {
      --border-radius: #{$border-radius};
      --max-width: #{$compact-modal-max-width};
      text-align: center;
    }

    &.kirby-drawer {
      --min-height: #{$drawer-default-height};
      --kirby-modal-padding-top: calc(var(--kirby-safe-area-top, 0px) + #{size('m')});
      padding-top: var(--kirby-modal-padding-top);
      align-items: flex-end;

      &.interact-with-background {
        &.kirby-modal.kirby-drawer {
          --kirby-modal-padding-top: 0px;
        }
      }

      .modal-wrapper {
        border-top-left-radius: #{$border-radius};
        border-top-right-radius: #{$border-radius};
      }
    }

    @include media('<medium') {
      &:not(.kirby-drawer):not(.kirby-modal-compact) {
        --height: 100%;
      }
    }

    &:not(.kirby-modal-compact).kirby-modal-full-height {
      --height: 100%;
    }

    &.modal-card:not(.kirby-drawer) {
      .modal-wrapper {
        @include media('<medium') {
          // Reset Ionic Card style height + top border radius:
          --height: 100%;
          border-top-left-radius: 0;
          border-top-right-radius: 0;
        }

        @include media('>=medium') {
          // Reset Ionic Card style border radius:
          border-radius: $border-radius;
        }
      }
    }

    @include media('>=medium') {
      --width: #{$modal-max-width};
      --border-radius: #{$border-radius};
      --box-shadow: #{get-elevation(8)};

      &:not(.kirby-modal-compact) {
        --max-height: 100%;
        --kirby-modal-padding-top-base: #{size('xl')};
        --kirby-modal-padding-top: var(--kirby-modal-padding-top-base);
        padding-top: var(--kirby-modal-padding-top);

        &:not(.kirby-drawer) {
          --min-height: #{$modal-default-height};
          align-items: flex-start;

          &.kirby-modal-small {
            --min-height: #{map-get($modal-heights, 's')};
          }
          &.kirby-modal-medium {
            --min-height: #{map-get($modal-heights, 'm')};
          }
          &.kirby-modal-large {
            --min-height: #{map-get($modal-heights, 'l')};
          }

          &.kirby-modal-full-height .modal-wrapper,
          .modal-wrapper.full-height {
            border-bottom-left-radius: 0;
            border-bottom-right-radius: 0;
          }
        }
      }

      &.kirby-drawer {
        --kirby-modal-padding-top: calc(
          var(--kirby-modal-padding-top-base) + #{get-drawer-additional-padding-top()}
        );

        .modal-wrapper {
          border-bottom-left-radius: 0;
          border-bottom-right-radius: 0;
        }
      }
    }
  }

  &.kirby-action-sheet {
    --background: transparent;
    --width: 100%;
    --height: 100%;

    .modal-wrapper {
      display: flex;
      justify-content: center;
      align-items: flex-end;
      --max-width: auto;
      --max-height: auto;
    }
  }

  &.kirby-alert {
    --background: #{get-color('background-color')};
    --border-radius: #{$border-radius};
    --box-shadow: #{get-elevation(8)};

    .modal-wrapper {
      max-width: $alert-max-width;
      height: auto;
      text-align: center;
    }
  }
}

.kirby-toast {
  position: fixed;
  user-select: none;
  text-align: center;

  // Set default colors
  --background: #{get-color('success')};
  --color: #{get-color('success-contrast')};
  --button-color: #{get-color('success-contrast')};

  @each $color-name, $color-value in $notification-colors {
    &.#{$color-name} {
      --background: #{get-color($color-name)};
      --color: #{get-color($color-name + '-contrast')};
      --button-color: #{get-color($color-name + '-contrast')};
    }
  }
}

/*
 * FAB-sheet backdrop
*/
.fab-sheet-active {
  .tabs-inner,
  ion-router-outlet,
  .ion-page {
    overflow: visible;
    contain: none !important;
  }

  ion-tab-bar {
    z-index: -1;
  }
}
