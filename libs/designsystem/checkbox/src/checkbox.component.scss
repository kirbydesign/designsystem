@use 'sass:map';
@use '@kirbydesign/core/src/scss/interaction-state';
@use '@kirbydesign/core/src/scss/utils';

$border-radius: 6px;
$checkbox-icon-size: utils.size('m');
$spacing-to-edge: map.get(utils.$checkbox-radio-spacing, 'to-edge');
$spacing-to-label: map.get(utils.$checkbox-radio-spacing, 'to-label');

@function get-vertical-padding($target-height) {
  @return ($target-height - $checkbox-icon-size) * 0.5;
}

:host {
  display: inline-block;

  &.attention-level1 ion-checkbox {
    --checkmark-color: #{utils.get-color('black')};
    --checkbox-background-checked: #{utils.get-color('success')};
    --border-color-checked: #{utils.get-color('success')};

    @include interaction-state.apply-hover {
      --checkbox-background-checked: #{interaction-state.get-state-color('success', 's')};
      --border-color-checked: #{interaction-state.get-state-color('success', 's')};
    }
    @include interaction-state.apply-active {
      --checkbox-background-checked: #{interaction-state.get-state-color('success', 'l')};
      --border-color-checked: #{interaction-state.get-state-color('success', 'l')};
    }
  }

  &.attention-level2 ion-checkbox {
    --checkmark-color: #{utils.get-color('white')};
    --checkbox-background-checked: #{utils.get-color('black')};
    --border-color-checked: #{utils.get-color('black')};

    @include interaction-state.apply-hover {
      --checkbox-background-checked: #{interaction-state.get-state-color(
          'black',
          'xl',
          $make-lighter: true
        )};
      --border-color-checked: #{interaction-state.get-state-color(
          'black',
          'xl',
          $make-lighter: true
        )};
    }
    @include interaction-state.apply-active {
      --checkmark-color: #{interaction-state.get-state-color('white')};
      --checkbox-background-checked: #{interaction-state.get-state-color(
          'black',
          'xxxl',
          $make-lighter: true
        )};
      --border-color-checked: #{interaction-state.get-state-color(
          'black',
          'xxxl',
          $make-lighter: true
        )};
    }
  }

  &.error ion-checkbox {
    --border-color: #{utils.get-color('danger')};
  }

  &[disabled] {
    color: #{utils.get-text-color('semi-dark')};

    ion-checkbox {
      --checkmark-color: #{utils.get-color('semi-dark')};
      --checkbox-background: #{utils.get-color('semi-light')};
      --checkbox-background-checked: #{utils.get-color('semi-light')};
      --border-color: #{utils.get-color('medium')};
      --border-color-checked: #{utils.get-color('semi-light')};

      &::part(label-text-wrapper) {
        opacity: 1; // Reset Ionic disabled style
      }

      &::part(native-wrapper) {
        opacity: 1; // Reset Ionic disabled style
      }
    }
  }

  ion-checkbox {
    @include interaction-state.apply-focus-part($part: 'container');
    @include interaction-state.apply-hover {
      --checkbox-background: #{interaction-state.get-state-color('white')};
    }
    @include interaction-state.apply-active {
      --checkbox-background: #{interaction-state.get-state-color('white', 'xs')};
    }

    --transition: #{interaction-state.$default-transition-duration};
    --size: #{$checkbox-icon-size};
    --checkmark-width: #{utils.size('xxxs')};
    --checkbox-background: #{utils.get-color('white')};
    --border-width: 1px;
    --border-color: #{utils.get-color('semi-dark')};
    --border-radius: #{$border-radius};

    &::part(container) {
      padding: utils.size('xxxs'); // Spacing between checkmark and container box
    }

    &::part(label) {
      align-items: start;
      padding-left: $spacing-to-edge;
      padding-right: $spacing-to-label;
      line-height: utils.line-height('n');
    }

    &::part(label-text-wrapper) {
      margin-inline: $spacing-to-label 0;
    }

    span {
      white-space: pre-line;
    }
  }

  &.has-label {
    display: block;

    @each $size, $height in utils.$checkbox-radio-sizes {
      &.#{$size} {
        ion-checkbox::part(label) {
          $vertical-padding: get-vertical-padding($height);

          padding-top: $vertical-padding;
          padding-bottom: $vertical-padding;
        }
      }
    }
  }
}

:host-context(kirby-item) {
  z-index: utils.z('default'); // Makes whole kirby-item clickable above item-inner.

  ion-checkbox {
    margin: 0;
  }

  &[slot='start'] {
    margin-inline-end: $spacing-to-label;
  }
}
