@use 'sass:meta';
@use '@kirbydesign/core/src/scss/utils';

:host {
  display: block;
  border-top-left-radius: utils.$border-radius;
  border-top-right-radius: utils.$border-radius;
  text-align: center;
  padding: 0;
  color: var(--kirby-card-header-color);
  background-color: var(--kirby-card-header-background-color);

  &.has-padding {
    padding: var(--kirby-internal-card-header-padding, utils.size('s'));
  }
}

h2 {
  font-size: utils.font-size('n');
  font-weight: utils.font-weight('normal');
  margin: 0 0 var(--kirby-internal-card-header-margin-bottom, utils.size('xxs'));
  line-height: var(--kirby-internal-card-header-line-height, utils.line-height('l'));

  &.bold {
    font-weight: utils.font-weight('bold');
  }
}

h4 {
  font-size: utils.font-size('s');
  margin: 0;
  font-weight: utils.font-weight('normal');
}

// Flagged card headers

// key = level, value = decoration color name + shade
$_card-header-notification-colors-map: (
  'success': (
    'green',
    30,
  ),
  'warning': (
    'yellow',
    30,
  ),
  'danger': (
    'red',
    30,
  ),
  'info': 'semi-light',
);

@each $name, $variant_shade in $_card-header-notification-colors-map {
  :host(.#{$name}) {
    @if meta.type_of($variant_shade) == list {
      --kirby-card-header-background-color: #{utils.get-decoration-color($variant_shade...)};
    } @else {
      --kirby-card-header-background-color: #{utils.get-color($variant_shade)};
    }

    --kirby-card-header-color: #{utils.get-color('black')};
  }
}

:host(.flagged) {
  --kirby-internal-card-header-padding: #{utils.size('xxxxs')} #{utils.size('xxs')};

  h2 {
    --kirby-internal-card-header-line-height: #{utils.line-height('n')};
    --kirby-internal-card-header-margin-bottom: 0px;
  }
}
