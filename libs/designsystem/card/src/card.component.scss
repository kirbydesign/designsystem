@use '@kirbydesign/core/src/scss/interaction-state';
@use '@kirbydesign/core/src/scss/utils';
@use '@kirbydesign/core/src/scss/themes';

:host {
  --kirby-card-main-background-color: #{utils.get-color('white')};
  --kirby-card-main-color: #{utils.get-color('white-contrast')};
  --kirby-card-footer-background-color: #{utils.get-color('white')};
  --kirby-card-footer-color: #{utils.get-color('white-contrast')};

  @include themes.apply-white-theme;

  &.kirby-color-brightness-light {
    @include themes.apply-light-theme;
  }

  &.kirby-color-brightness-dark {
    @include themes.apply-dark-theme;

    &[role='button'] {
      @include interaction-state.apply-hover('xxs', $make-lighter: true);
      @include interaction-state.apply-active('s', $make-lighter: true);
    }
  }

  @include interaction-state.extend-content {
    display: inherit;
    flex-direction: inherit;
    justify-content: inherit;
  }

  border-radius: utils.$border-radius;
  box-shadow: utils.get-elevation(2);
  color: var(--kirby-card-main-color);
  background-color: var(--kirby-card-main-background-color);
  background-image: var(--kirby-card-background-image);
  background-repeat: var(--kirby-card-background-repeat, no-repeat);
  background-position: var(--kirby-card-background-position, center);
  background-size: var(--kirby-card-background-size, cover);
  border: var(--kirby-card-border, none);
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  overflow: hidden;
  position: relative;
  z-index: utils.z('default');
  width: var(--kirby-card-width, auto);

  &.flat {
    box-shadow: none;
  }

  &.outlined {
    background-color: transparent;
    border: var(--kirby-card-border, 1px solid utils.get-color('medium'));
    box-shadow: none;

    &:has(kirby-card-header.flagged) {
      border: none;

      .content-wrapper {
        border-block-end: var(--kirby-card-border, 1px solid utils.get-color('medium'));
        border-inline-start: var(--kirby-card-border, 1px solid utils.get-color('medium'));
        border-inline-end: var(--kirby-card-border, 1px solid utils.get-color('medium'));
        border-bottom-left-radius: utils.$border-radius;
        border-bottom-right-radius: utils.$border-radius;
      }
    }
  }

  &[role='button'] {
    @include interaction-state.initialize-layer;
    @include interaction-state.apply-hover('xxxs');
    @include interaction-state.apply-active('xxs');
    @include interaction-state.apply-focus-visible($shadow: utils.get-elevation(2));

    outline: none;
  }
}

.content-wrapper {
  &.padding {
    padding-top: var(--kirby-card-padding-top, utils.size('s'));
    padding-bottom: var(--kirby-card-padding-bottom, utils.size('s'));
    padding-inline: utils.size('s');
  }
}

.content-layer {
  height: 100%;
}

@each $color-name, $color-value in utils.$main-colors {
  :host(.#{$color-name}):not(.outlined) {
    --kirby-card-main-background-color: #{utils.get-color($color-name)};
    --kirby-card-main-color: #{utils.get-color($color-name + '-contrast')};
  }
}
