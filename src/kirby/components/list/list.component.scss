@import '../../scss/utils';

$divider-color: get-color('background-color');
$background-color-hover: get-color('background-color');
$shadow: get-elevation(2);

:host {
  ion-list {
    box-shadow: $shadow;
    background: transparent;
    contain: inherit;
    padding: 0;
  }

  ion-item {
    background-color: get-color('white');
    &:not(:last-of-type).has-divider {
      border-bottom: 1px solid $divider-color;
    }

    &.selected ::ng-deep * {
      font-weight: font-weight('bold');
    }
    &:focus {
      $outline-width: 5px;
      outline-color: var(--highlight-color-focused);
      outline-style: auto;
      outline-width: $outline-width;
      margin-bottom: $outline-width;
      background-color: $background-color-hover;
    }

    &.selectable {
      cursor: pointer;
      &:hover {
        background-color: $background-color-hover;
      }
    }

    $list-colors: ('light'); // add supported list item theme colors here
    @each $color-name, $color-value in $list-colors {
       &.#{$color-name} {
               background-color: #{get-color($color-name)};
               color: #{get-color($color-name+'-contrast')};
               &:focus {
                   background-color: #{get-color($color-name+'-shade')};
               }
           }
    }
  }

  &.has-sections {
    ion-list {
      box-shadow: none;
    }
    .list-items {
      box-shadow: $shadow;
      border-radius: $border-radius;
    }
  }
}

:host(.rounded) {
  ion-list,
  .list-items {
    border-radius: $border-radius;
  }

  ion-list:not(.has-header) ion-item-sliding:first-of-type,
  ion-list-header {
    border-top-left-radius: $border-radius;
    border-top-right-radius: $border-radius;
  }

  ion-list:not(.has-footer) ion-item-sliding:last-of-type,
  .footer {
    border-bottom-left-radius: $border-radius;
    border-bottom-right-radius: $border-radius;
  }
}

ion-list-header {
  background-color: get-color('white');
  border-bottom: 1px solid $divider-color;
  padding: 0;
}

ion-item-divider {
  background-color: get-color('white');
  border-color: transparent;
  padding: 0;
  --color: unset;
}

ion-item {
  display: flex;
  width: 100%;
  padding: size('m') size('xxs');
  font-size: font-size('s');
  --inner-border-width: 0;
  --background: transparent;
  --min-height: unset;
}

.section-header {
  background-color: transparent;
  padding: size('m');
}

.no-more-items, .loading {
  width: 100%;
  padding: size('m');
  text-align: center;
}

.footer {
  overflow: hidden;
  display: flex;
  justify-content: space-between;
  border-top: 1px solid $divider-color;
}

.swipe-action {
  display: flex;
  color: #{get-color('primary-contrast')};
  @each $color-name, $color-value in $main-colors {
    .#{$color-name} {
      background-color: #{get-color($color-name)};
      color: #{get-color($color-name + '-contrast')};
    }
  }

  ion-item-option {
    height: 100%;
    display: inline-block;
    text-align: center;
  }

  .item-content {
    display: inline-grid;
    min-width: 70px;
    flex-direction: column;

    ion-label {
      --background: unset;
      --color: unset;
    }
  }
}
