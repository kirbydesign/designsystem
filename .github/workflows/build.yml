name: Build & Deploy Cookbok
on:
  push

defaults:
  run:
    shell: bash

jobs:
  lint_and_unittest:
    name: Lint & unit test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '10.16'
      - name: Install NPM dependencies
        run: npm ci
      - name: Run linting
        run: npm run lint
      - name: Run tests
        run: npm run test:ci
      - name: Generate coverage report
        run: npm run coverage-report || true

  build_kirby:
    name: Build Kirby lib
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '10.16'
      - name: Install NPM dependencies
        run: npm ci
      - name: Build Kirby lib
        run: npm run dist:designsystem

  deploy_to_cookbook:
    name: Deploy cookbook
    needs: [lint_and_unittest, build_kirby]
    runs-on: ubuntu-latest
    env:
      DOMAIN: ${{ github.ref == 'refs/heads/master' && 'kirby.design' || '650b277bd9a54e5cbadc.westeurope.aksapp.io' }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Get branch name
        if: github.ref != 'refs/heads/master'
        run: |
          branchname="${GITHUB_REF##*/}"
          echo "Github branchname: ${branchname}"
          branchname="${branchname##*/}"
          echo "Removed leading paths - branchname: ${branchname}"
          branchname=$(tr [:upper:] [:lower:] <<< "$branchname")
          echo "Converted to lowercase - branchname: ${branchname}"
          branchname="${branchname//[^a-zA-Z0-9]/-}"
          echo "Replaced illegal chars - branchname: ${branchname}"
          branchname=$(tr -s '-' '-' <<< "$branchname")
          echo "Removed duplicated dashes - branchname: ${branchname}"
          branchname="${branchname%%-}"
          echo "Removed trailing dash - final branchname: ${branchname}"
          releasename="kby-${branchname}"
          releasename=$(cut -c 1-53 <<< "$releasename")
          echo "Releasename: ${releasename}"
          echo "GH_DEPLOY_ENVIRONMENT=pr-${branchname}" >> $GITHUB_ENV
          echo "RELEASENAME=${releasename}" >> $GITHUB_ENV
      - name: Get release name
        if: github.ref == 'refs/heads/master'
        run: echo "RELEASENAME=designsystem" >> $GITHUB_ENV
      - name: Get hostname for feature branch
        if: github.ref != 'refs/heads/master'
        run: |
          chmod +x ./.scripts/dns.pl
          hostname=$(perl ./.scripts/dns.pl $DOMAIN "${RELEASENAME}")
          echo "HOSTNAME=${hostname}" >> $GITHUB_ENV
      - name: Get hostname for master branch
        if: github.ref == 'refs/heads/master'
        run: echo "HOSTNAME=cookbook" >> $GITHUB_ENV
      - name: Create Github Deployment
        id: create_deployment
        if:  github.ref != 'refs/heads/master'
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/:repository/deployments
          repository: ${{ github.repository }}
          ref: ${{ github.ref }}
          environment: ${{ env.GH_DEPLOY_ENVIRONMENT }}
          auto_merge: false
          required_contexts: '[]' # Skip commit checks
          mediaType: '{"previews": ["flash", "ant-man"]}' # some parameters need preview: https://docs.github.com/en/rest/reference/repos#list-deployment-statuses-preview-notices
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Set deployment status to in progress
        if: github.ref != 'refs/heads/master'
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/:repository/deployments/:deployment/statuses
          repository: ${{ github.repository }}
          deployment: ${{ fromJson(steps.create_deployment.outputs.data).id }}
          log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          state: in_progress
          mediaType: '{"previews": ["flash", "ant-man"]}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '10.16'
      - name: Install NPM dependencies
        run: npm ci
      - name: Install Kubernetes CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y apt-transport-https
          curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
          echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee -a /etc/apt/sources.list.d/kubernetes.list
          sudo apt-get update
          sudo apt-get install -y kubectl
      - name: Setup Helm to use version 2.12.3
        run: |
          curl https://storage.googleapis.com/kubernetes-helm/helm-v2.12.3-linux-amd64.tar.gz -o helm-linux-amd64.tar.gz
          tar xzf helm-linux-amd64.tar.gz
          sudo cp linux-amd64/helm /usr/bin/
          rm -rf linux-amd64
      - name: Build Kirby cookbook
        run: npm run dist:cookbook
      - name: Build Docker image
        run: docker build -t drbstaging.azurecr.io/kirbydesign/designsystem:git${{ github.sha }} .
      - name: Push Docker image
        env:
          DOCKER_REPO: 'drbstaging.azurecr.io/kirbydesign/designsystem'
          DOCKER_TAG: git${{github.sha}}
          DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
          DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
        run: |
          echo "pushing docker image $DOCKER_REPO:$DOCKER_TAG"
          echo $DOCKER_PASSWORD | docker login --username $DOCKER_USERNAME --password-stdin drbstaging.azurecr.io
          docker push $DOCKER_REPO:$DOCKER_TAG
      - name: Clone charts repo
        run: git clone https://github.com/Bankdata/charts.git charts
      - name: Decrypt Kubernetes config
        env:
          KEY: ${{secrets.ENCRYPTED_09E556D51FDC_KEY}}
          IV: ${{secrets.ENCRYPTED_09E556D51FDC_IV}}
        run: |
          openssl enc -d -aes-256-cbc -md sha512 -K $KEY -iv $IV -salt -in ./.scripts/kube-config.enc -out kube.config
      - name: Upgrade deployed cookbook using Helm
        env:
          DOCKER_REPO: 'drbstaging.azurecr.io/kirbydesign/designsystem'
          DOCKER_TAG: git${{github.sha}}
          HELM_CONFIG: ${{ github.ref == 'refs/heads/master' && 'config/helm/staging.yaml' || 'config/helm/branch.yaml' }}
        run: /usr/bin/helm upgrade --kubeconfig kube.config -i "${RELEASENAME}" charts/spa --set image.repository=$DOCKER_REPO --set image.tag=$DOCKER_TAG --set ingress.host="${HOSTNAME}".$DOMAIN -f $HELM_CONFIG
      - name: Deploy the pull request
        run: |
          # deployment logic goes here
          sleep 30
      - name: Set deployment status to success
        if: github.ref != 'refs/heads/master'
        id: successful_deployment
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/:repository/deployments/:deployment/statuses
          repository: ${{ github.repository }}
          deployment: ${{ fromJson(steps.create_deployment.outputs.data).id }}
          environment_url: https://${{ env.HOSTNAME }}.${{ env.DOMAIN }}
          log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          state: success
          mediaType: '{"previews": ["ant-man"]}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Set deployment status to failure
        id: failed_deployment
        uses: octokit/request-action@v2.x
        if: failure()
        with:
          route: POST /repos/:repository/deployments/:deployment/statuses
          repository: ${{ github.repository }}
          deployment: ${{ fromJson(steps.create_deployment.outputs.data).id }}
          log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          state: failure
          mediaType: '{"previews": ["ant-man"]}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
