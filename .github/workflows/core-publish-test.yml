name: Core publish test

on:
  pull_request:
    paths: 'libs/**'

defaults:
  run:
    shell: bash

jobs:
  determine_changed_library:
    name: Determine library to publish
    runs-on: ubuntu-latest
    outputs:
      build_core: ${{ steps.filter.outputs.core == 'true' }}
      build_designsystem: ${{ steps.filter.outputs.designsystem == 'true' }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Check modified files
        id: filter
        uses: dorny/paths-filter@v2.9.2
        with:
          filters: |
            core:
              - 'libs/core/**'
            designsystem:
              - 'libs/designsystem/**'

  bump_version_and_publish:
    name: Bump and publish new package version to npm
    needs: determine_changed_library
    if: needs.determine_changed_library.outputs.build_core == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Echo
        run: echo "publishing core"
 
      # - name: Checkout master branch
      #   uses: actions/checkout@v2
      #   with:
      #     token: ${{secrets.VERSION_BUMP_GITHUB_TOKEN}}
      # - name: Get Node.JS version from package.json
      #   run: echo "NODE_VERSION=$(jq -r .engines.node ./package.json)" >> $GITHUB_ENV
      # - name: Install Node.js
      #   uses: actions/setup-node@v2
      #   with:
      #     node-version: ${{env.NODE_VERSION}}
      # - name: Fetch Node Modules Cache
      #   uses: actions/cache@v2
      #   id: cache
      #   with:
      #     path: | 
      #       **/node_modules
      #     key: node-modules-${{runner.os}}-${{env.NODE_VERSION}}-${{hashFiles('**/package.json', '**/package-lock.json')}}
      # - name: Clean Install NPM Dependencies
      #   if: steps.cache.outputs.cache-hit != 'true'
      #   run: npm ci
      # - name: Run Postinstall Script
      #   if: steps.cache.outputs.cache-hit == 'true'
      #   run: npm run postinstall
      # - name: Configure git
      #   run: |
      #     git config user.name "Kirby Bot"
      #     git config user.email "<>"
      # - name: Go to core lib directory
      #   run: cd libs/core
      # - name: Create npm config
      #   run: echo '//registry.npmjs.org/:_authToken=${{secrets.NPM_PUBLISH_TOKEN}}' > ~/.npmrc
      # - name: Bump version
      #   run: npm version patch -m ":bookmark:Bumping version to %s"
      # - name: Build package and publish to npm
      #   run: npm run publish
      # - name: Push version bump and tag to Github
      #   run: git push --follow-tags
