name: Kirby branch CI
on:
  push:
    branches-ignore: [ master ]
defaults:
  run:
    shell: bash

jobs:
    lint_and_unittest:
      runs-on: ubuntu-latest
      strategy:
       matrix:
          node-version: [10.16]
      steps:
        - uses: actions/checkout@v2
        - name: Use Node.js ${{ matrix.node-version }}
          uses: actions/setup-node@v1
          with:
            node-version: ${{ matrix.node-version }}
        - name: Install six
          run: pip install six
        - name: run npm ci
          run: npm ci
        - name: run npm lint
          run: npm run lint
        - name: run npm extract-scss-variables
          run: npm run extract-scss-variables
        - name: run npm test ci
          run: npm run test:ci
        - name: run npm coverage-report
          run: npm run coverage-report || true

    build_kirby:
      runs-on: ubuntu-latest
      strategy:
        matrix:
          node-version: [10.16]
      steps:
        - uses: actions/checkout@v2
        - name: Use Node.js ${{ matrix.node-version }}
          uses: actions/setup-node@v1
          with:
            node-version: ${{ matrix.node-version }}
        - name: install six
          run: pip install six
        - name: run npm ci
          run: npm ci
        - name: run npm dist:designsystem
          run: npm run dist:designsystem

    deploy_to_cookbook:
      needs: [lint_and_unittest, build_kirby]
      runs-on: ubuntu-latest
      #    if: ${{ github.event_name != 'pull_request' }}
      strategy:
        matrix:
          node-version: [10.16]
      steps:
        - uses: actions/checkout@v2
        - name: Use Node.js ${{ matrix.node-version }}
          uses: actions/setup-node@v1
          with:
            node-version: ${{ matrix.node-version }}
        - name: run npm ci
          run: npm ci
        - name: setup kubectl
          run: |
            sudo apt-get update
            sudo apt-get install -y apt-transport-https
            curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
            echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee -a /etc/apt/sources.list.d/kubernetes.list
            sudo apt-get update
            sudo apt-get install -y kubectl
        - name: setup helm to use version 2.12.3
          run: |
            curl https://storage.googleapis.com/kubernetes-helm/helm-v2.12.3-linux-amd64.tar.gz -o helm-linux-amd64.tar.gz
            tar xzf helm-linux-amd64.tar.gz
            sudo cp linux-amd64/helm /usr/bin/
            rm -rf linux-amd64
        - name: run npm dist
          run: npm run dist
        - name: build docker image
          run: docker build -t drbstaging.azurecr.io/kirbydesign/designsystem:git${{ github.sha }} .
        - name: get branch name
          run: |
            branchname="${GITHUB_REF##*/}"
            branchname="${branchname//feature//}"
            branchname="${branchname#?}"
            releasename="designsystem-${branchname//[^a-zA-Z0-9]/-}"
            releasename=$(tr [A-Z] [a-z] <<< "$releasename")
            releasename=$(cut -c 1-53 <<< "$releasename")
            echo "RELEASENAME=${releasename}" >> $GITHUB_ENV
        - name: get dns
          env:
            DOMAIN: '650b277bd9a54e5cbadc.westeurope.aksapp.io'
          run: |
            chmod +x ./.scripts/dns.pl
            dns=$(perl ./.scripts/dns.pl $DOMAIN "${RELEASENAME}")
            echo "DNS=${dns}" >> $GITHUB_ENV
        - name: push docker image
          env:
            DOCKER_REPO: 'drbstaging.azurecr.io/kirbydesign/designsystem'
            DOCKER_TAG: git${{github.sha}}
            DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
            DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
          run: |
            echo "pushing docker image $DOCKER_REPO:$DOCKER_TAG"
            echo $DOCKER_PASSWORD | docker login --username $DOCKER_USERNAME --password-stdin drbstaging.azurecr.io
            docker push $DOCKER_REPO:$DOCKER_TAG
        - name: clone charts
          run: git clone https://github.com/Bankdata/charts.git charts
        - name: decrypt kube config
          env:
            KEY: ${{secrets.ENCRYPTED_09E556D51FDC_KEY}}
            IV: ${{secrets.ENCRYPTED_09E556D51FDC_IV}}
          run: |
            openssl version
            openssl enc -d -aes-256-cbc -md sha512 -K $KEY -iv $IV -salt -in ./.scripts/kube-config.enc -out kube.config
        - name: run helm upgrade
          env:
            DOCKER_REPO: 'drbstaging.azurecr.io/kirbydesign/designsystem'
            DOCKER_TAG: git${{github.sha}}
            DOMAIN: '650b277bd9a54e5cbadc.westeurope.aksapp.io'
            HELM_CONFIG: 'config/helm/branch.yaml'
          run: /usr/bin/helm upgrade --kubeconfig kube.config -i "${RELEASENAME}" charts/spa --set image.repository=$DOCKER_REPO --set image.tag=$DOCKER_TAG --set ingress.host="${DNS}".$DOMAIN -f $HELM_CONFIG









