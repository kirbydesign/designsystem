@use 'sass:list';
@use '@kirbydesign/core/src/scss/utils';

@mixin kirby-keys($start-index, $additional-keys: ()) {
  $keys: list.join(('K', 'I', 'R', 'B', 'Y'), $additional-keys);
  @each $letter in $keys {
    $counter: list.index($keys, $letter);
    &:nth-child(#{$start-index + $counter})::before {
      content: $letter;
    }
  }
}

.dummy-keyboard {
  position: absolute;
  width: 100%;
  bottom: 0;
  z-index: 99999;
  pointer-events: none;
  overflow: hidden;
  height: var(--keyboard-height);

  .top,
  .bg {
    position: absolute;
    height: 100%;
    width: 100%;
  }

  .top {
    background-color: transparent;
    border-top: 1px dashed utils.get-color('semi-dark');
    z-index: 1;
  }

  .bg {
    opacity: 0.9;
    background-color: utils.get-color('medium');
    transition: transform utils.$soft-keyboard-transition-leave;
    display: grid;
    grid-template-columns: repeat(7, 1fr);
    grid-auto-rows: 1fr;
    grid-gap: utils.size('s');
    padding: utils.size('s');
    transform: translateY(100%);

    @include utils.media('>=medium') {
      grid-template-columns: repeat(10, 1fr);
    }

    > * {
      background-color: utils.get-color('white');
      border-radius: utils.size('xxxs');
      box-shadow: 0 2px utils.get-color('semi-dark');
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: utils.font-size('m');

      @include utils.media('<medium') {
        @include kirby-keys(15);
      }

      @include utils.media('>=medium') {
        @include kirby-keys(22, $additional-keys: ('Â©'));
      }
    }

    &.keyboard-showing {
      transform: translateY(0);
      transition: transform utils.$soft-keyboard-transition-enter;
    }
  }
}
